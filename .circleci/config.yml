version: 2

defaults: &defaults
  docker:
    - image: ubuntu:18.04
  steps:
    - checkout
    - run:
        name: setup prerequisites
        command: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y wget git build-essential file cpio unzip python bc rsync expect python-matplotlib graphviz
    - run:
        name: Prepare build
        command: |
             echo "$buildroot_version" > buildroot_version.txt && \
             git clone https://github.com/buildroot/buildroot.git && \
             cd buildroot && git checkout ${buildroot_version} && \
             mkdir -p ../rootfs/etc && \
             echo $CIRCLE_BUILD_URL > ../rootfs/etc/build_info.txt && \
             echo "BUILDROOT : $buildroot_version" >> ../rootfs/etc/build_info.txt && \
             grep NAVIT_VERSION ../package/navit/navit.mk >> ../rootfs/etc/build_info.txt
        no_output_timeout: 1200
    - run:
        name: Prepare config
        command: |
             cd buildroot/ && \
             cat configs/${target}_defconfig \
                     ../glibc_defconfig \
                     ../navit_defconfig \
                     > configs/navit_${target}_defconfig && \
             make BR2_EXTERNAL=../ defconfig && \
             make defconfig navit_${target}_defconfig && \
             grep BR2_LINUX_KERNEL_VERSION .config > ../kernel-version.txt
    - store_artifacts:
          path: buildroot/.config
          destination: buildroot-config
    - restore_cache:
       keys:
         - v2-dl-{{ checksum "buildroot/.config" }}-{{ checksum "buildroot_version.txt" }}
    - run:
        name: Download all sources
        command: |
             cd buildroot/ && bash ../build.sh source || (tail -n 200 br.log; exit 1)
        no_output_timeout: 1200
    - save_cache:
        key: v2-dl-{{ checksum "buildroot/.config" }}-{{ checksum "buildroot_version.txt" }}
        paths:
          - "buildroot/dl/"
    - restore_cache:
       keys:
         - v2-{{ .Environment.CIRCLE_JOB }}-toolchain-{{ checksum "glibc_defconfig" }}-{{ checksum "buildroot_version.txt" }}
    - run:
        name: Build toolchain
        command: |
             cd buildroot/ && bash ../build.sh toolchain || (tail -n 200 br.log; exit 1)
        no_output_timeout: 1200
    - save_cache:
        key: v2-{{ .Environment.CIRCLE_JOB }}-toolchain-{{ checksum "glibc_defconfig" }}-{{ checksum "buildroot_version.txt" }}
        paths:
          - "buildroot/output/"
    - restore_cache:
       keys:
         - v1-{{ .Environment.CIRCLE_JOB }}-kernel-{{ checksum "kernel-version.txt" }}-{{ checksum "buildroot_version.txt" }}
    - run:
        name: Build kernel
        command: |
             cd buildroot/ && bash ../build.sh BR2_JLEVEL=0 linux-rebuild || (tail -n 200 br.log; exit 1)
        no_output_timeout: 1200
    - save_cache:
        key: v1-{{ .Environment.CIRCLE_JOB }}-kernel-{{ checksum "kernel-version.txt" }}-{{ checksum "buildroot_version.txt" }}
        paths:
          - "buildroot/output/"
    - restore_cache:
       keys:
         - v1-{{ .Environment.CIRCLE_JOB }}-qt5-{{ checksum "buildroot/.config" }}-{{ checksum "buildroot_version.txt" }}
    - run:
        name: Conditionally build qt5 packages
        command: |
             cd buildroot/ && \
             grep BR2_PACKAGE_QT5BASE=y .config && \
             bash ../build.sh qt5base-rebuild qt5declarative-rebuild qt5location-rebuild \
             qt5xmlpatterns-rebuild qt5multimedia-rebuild qt5sensors-rebuild || (tail -n 200 br.log; exit 1)
        no_output_timeout: 1200
    - save_cache:
        key: v1-{{ .Environment.CIRCLE_JOB }}-qt5-{{ checksum "buildroot/.config" }}-{{ checksum "buildroot_version.txt" }}
        paths:
          - "buildroot/output/"
    - run:
        name: Build remaining packages
        command: |
             cd buildroot/ && bash ../build.sh && \
             mv output/images/sdcard.img output/images/navit-${target}-${CIRCLE_BUILD_NUM}.img \
             || (tail -n 200 br.log; exit 1)
        no_output_timeout: 1200
    - store_artifacts:
          path: buildroot/br.log
          destination: br.log
    - store_artifacts:
          path: buildroot/output/images
          destination: output
    - run:
        name: Build graphs
        command: |
             cd buildroot/ && make graph-build graph-depends
        no_output_timeout: 1200
    - store_artifacts:
          path: buildroot/output/graphs

jobs:
  raspberrypi2:
    <<: *defaults
    environment:
      target: raspberrypi2
      buildroot_version: 2018.02.7
  raspberrypi3:
    <<: *defaults
    environment:
      target: raspberrypi3
      buildroot_version: 2018.02.7

workflows:
  version: 2
  build_everything:
    jobs:
      - raspberrypi2
      - raspberrypi3
